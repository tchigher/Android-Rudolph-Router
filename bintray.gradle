apply plugin: 'com.jfrog.bintray'

version = rudolph_version

if (project.hasProperty("android")) {
    // Android libraries
    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        failOnError = false
        source = android.sourceSets.main.java.srcDirs
        options {
            encoding 'utf-8'
            charSet 'utf-8'
            links 'http://docs.oracle.com/javase/7/docs/api/'
            linksOffline "https://developer.android.com/reference", "${android.sdkDirectory}/docs/reference"
        }
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else {
    // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

// bintray
bintray {
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')
    //    userOrg = properties.getProperty("bintray.org")

    configurations = ['archives']
    override = true

    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        //        userOrg = userOrg
        licenses = ["Apache-2.0"]
        publish = true
        publicDownloadNumbers = true
        dryRun = false
        version {
            name = libraryVersion
            desc = libraryDescription
            released = new Date()
            vcsTag = libraryVersion
        }
    }
}
